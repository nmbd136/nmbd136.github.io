{"version":3,"file":"js/770.d0422ea8.js","mappings":"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","sources":["webpack://a/./src/views/mergeTtable.vue","webpack://a/src/views/mergeTtable.vue","webpack://a/./src/views/mergeTtable.vue?686b","webpack://a/./src/views/mergeTtable.vue?2b0f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('MyTable',{attrs:{\"tableData\":_vm.tableData,\"columns\":_vm.columns,\"dicts\":_vm.dictArr},scopedSlots:_vm._u([{key:\"cell-type\",fn:function({ scope }){return [_c('span',[(scope.row.isSatr)?_c('span',[_c('i',{staticClass:\"el-icon-delete\"})]):_vm._e(),(scope.row.type == '0')?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"0类型\")]):_vm._e(),(scope.row.type == '1')?_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"1类型\")]):_vm._e()],1)]}},{key:\"cell-progress\",fn:function({ scope }){return [_c('span',[_c('el-progress',{attrs:{\"percentage\":scope.row.progress}})],1)]}},{key:\"cell-address\",fn:function({ scope }){return [_c('span',[_vm._v(\" \"+_vm._s(scope.row.address)+\" \")])]}}])}),_c('MyPagination')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!-- 表格组件 -->\r\n        <MyTable :tableData=\"tableData\" :columns=\"columns\" :dicts=\"dictArr\">\r\n            <template v-slot:cell-type=\"{ scope }\">\r\n                <span>\r\n                    <span v-if=\"scope.row.isSatr\">\r\n                        <i class=\"el-icon-delete\"></i>\r\n                    </span>\r\n                    <el-tag v-if=\"scope.row.type == '0'\" type=\"success\">0类型</el-tag>\r\n                    <el-tag v-if=\"scope.row.type == '1'\" type=\"warning\">1类型</el-tag>\r\n                </span>\r\n            </template>\r\n\r\n            <template v-slot:cell-progress=\"{ scope }\">\r\n                <span>\r\n                    <el-progress :percentage=\"scope.row.progress\"></el-progress>\r\n                </span>\r\n            </template>\r\n\r\n            <template v-slot:cell-address=\"{ scope }\">\r\n                <span>\r\n                    {{ scope.row.address }}\r\n                </span>\r\n            </template>\r\n        </MyTable>\r\n        <MyPagination></MyPagination>\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    dicts: ['licensetype', 'approvalcontent'],\r\n    components: {\r\n        // 引入组件\r\n        MyTable: () => import('../components/Table/index.vue'),\r\n        MyPagination: () => import('../components/Pagination/index.vue'),\r\n    },\r\n    data() {\r\n        return {\r\n            // 表格数据\r\n            tableData: [\r\n                // 一年级\r\n                {\r\n                    area: \"华北\",\r\n                    province: \"北京\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"华北\",\r\n                    province: \"北京2\",\r\n                    month_1: \"200\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"9\"\r\n                }, {\r\n                    area: \"华北\",\r\n                    province: \"北京23\",\r\n                    month_1: \"2001\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"9\"\r\n                },\r\n                {\r\n                    area: \"华北\",\r\n                    province: \"山西\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"华北\",\r\n                    province: \"辽宁\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"东北\",\r\n                    province: \"吉林\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"东北\",\r\n                    province: \"黑2\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"东北\",\r\n                    province: \"黑2\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"东北\",\r\n                    province: \"黑2\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"西北\",\r\n                    province: \"黑2\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"西北\",\r\n                    province: \"西二\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n                {\r\n                    area: \"西北\",\r\n                    province: \"西三\",\r\n                    month_1: \"100\",\r\n                    month_2: \"张三\",\r\n                    month_3: \"90\"\r\n                },\r\n            ],\r\n            columns: [\r\n                {\r\n                    prop: \"area\",\r\n                    label: \"区域\",\r\n\r\n                    width: \"120\",\r\n                    isHeader: true,\r\n                    element: \"input\"\r\n                },\r\n                {\r\n                    prop: \"province\",\r\n                    label: \"省份\",\r\n\r\n                    width: \"120\",\r\n                    isHeader: true,\r\n                    element: \"select\"\r\n                },\r\n                {\r\n                    prop: \"month_1\",\r\n                    label: \"一月\",\r\n\r\n                    isHeader: true,\r\n                    width: \"100\",\r\n                    show_overflow_tooltip: true\r\n                },\r\n                {\r\n                    prop: \"month_2\",\r\n                    label: \"二月\",\r\n\r\n                    isHeader: true,\r\n                    isApiDict: false\r\n                },\r\n                {\r\n                    prop: \"month_3\",\r\n                    label: \"三月\",\r\n\r\n                    isHeader: true,\r\n                    isApiDict: true\r\n                },\r\n\r\n            ],\r\n            dictArr: [\r\n                {\r\n                    type: [\r\n                        {\r\n                            label: \"0类型\",\r\n                            value: \"0\"\r\n                        },\r\n                        {\r\n                            label: \"1类型\",\r\n                            value: \"1\"\r\n                        }\r\n                    ],\r\n                    name: [\r\n                        {\r\n                            label: \"0类型111\",\r\n                            value: \"0\"\r\n                        },\r\n                        {\r\n                            label: \"1类型\",\r\n                            value: \"1\"\r\n                        }\r\n                    ],\r\n                }\r\n            ]\r\n        };\r\n    },\r\n    methods: {\r\n\r\n        async getInfomation(arr) {\r\n            const describeMap = {\r\n                status: () => this.statusFnc(),\r\n                age: () => this.ageFnc()\r\n            };\r\n            for (const key of arr) {\r\n                if (describeMap[key]) {\r\n                    const result = await describeMap[key](); // 等待异步函数完成\r\n                    this.setDictArr(key, result); // 更新对应的列选项\r\n                } else {\r\n                    console.log(\"没找到你需要的职位描述！\");\r\n                }\r\n            }\r\n        },\r\n        async ageFnc() {\r\n            // 这里是模拟的异步请求，实际应用中应替换为实际的 API 调用\r\n            return new Promise(resolve => {\r\n                setTimeout(() => {\r\n                    resolve([{ label: \"0年龄\", value: \"0\" }]); // 假设这是从接口返回的数据\r\n                }, 10);\r\n            });\r\n        },\r\n        async statusFnc() {\r\n            // 这里是模拟的异步请求，实际应用中应替换为实际的 API 调用\r\n            return new Promise(resolve => {\r\n                setTimeout(() => {\r\n                    resolve([{ label: \"教室\", value: \"0\" }]); // 假设这是从接口返回的数据\r\n                }, 10);\r\n            });\r\n        },\r\n        setDictArr(prop, options) {\r\n            let obj = {}\r\n            obj[prop] = options; // 这里 prop 是动态计算的属性名\r\n            console.log(obj, \"obj\");\r\n\r\n            this.dictArr.push(obj)\r\n\r\n\r\n\r\n\r\n\r\n            // const column = this.columns.find(c => c.prop == prop);\r\n            // if (column) {\r\n            //   column.options = options;\r\n            // }\r\n        }\r\n    },\r\n    mounted() {\r\n        let needToGetInfo = false; // 标记是否需要调用 getInfomation\r\n\r\n        this.columns.forEach(column => {\r\n            // 检查是否需要从字典数组中获取数据\r\n            if (!column.isApiDict) {\r\n                const dict = this.dictArr.find(dict => dict[column.prop]);\r\n                if (dict) {\r\n                    column.options = dict[column.prop];\r\n                }\r\n            } else {\r\n                needToGetInfo = true; // 如果字典中没有找到，则设置标记为 true\r\n            }\r\n        });\r\n        if (needToGetInfo) {\r\n            let arr = this.columns.filter(r => r.hasOwnProperty('isApiDict') && r.isApiDict).map(i => i.prop)\r\n            this.getInfomation(arr);\r\n        }\r\n\r\n        console.log(this.columns, \"-------\");\r\n\r\n\r\n        return\r\n        // console.log(this.dict);\r\n        // this.$on('dictReady', () => {\r\n        console.log('字典数据已加载:', this.dict);\r\n        // });\r\n\r\n        let img = document.getElementsByTagName(\"img\");\r\n\r\n        const observer = new IntersectionObserver(changes => {\r\n            //changes 是被观察的元素集合\r\n            for (let i = 0, len = changes.length; i < len; i++) {\r\n                let change = changes[i];\r\n\r\n                // 通过这个属性判断是否在视口中\r\n                if (change.isIntersecting) {\r\n                    const imgElement = change.target;\r\n                    imgElement.src = imgElement.getAttribute(\"data-src\");\r\n                    console.log(imgElement.src);\r\n\r\n                    observer.unobserve(imgElement);\r\n                }\r\n            }\r\n        })\r\n        Array.from(img).forEach(item => observer.observe(item));\r\n\r\n    }\r\n};\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./mergeTtable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./mergeTtable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./mergeTtable.vue?vue&type=template&id=0cf5ac75\"\nimport script from \"./mergeTtable.vue?vue&type=script&lang=js\"\nexport * from \"./mergeTtable.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","tableData","columns","dictArr","scopedSlots","_u","key","fn","scope","row","isSatr","staticClass","_e","type","_v","progress","_s","address","staticRenderFns","dicts","components","MyTable","MyPagination","data","area","province","month_1","month_2","month_3","prop","label","width","isHeader","element","show_overflow_tooltip","isApiDict","value","name","methods","getInfomation","arr","describeMap","status","statusFnc","age","ageFnc","result","setDictArr","console","log","Promise","resolve","setTimeout","options","obj","push","mounted","needToGetInfo","forEach","column","dict","find","filter","r","hasOwnProperty","map","i","component"],"sourceRoot":""}