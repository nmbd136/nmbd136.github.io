{"version":3,"file":"js/342.b9c9a4a7.js","mappings":"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","sources":["webpack://a/./src/components/Scroll.vue","webpack://a/src/components/Scroll.vue","webpack://a/./src/components/Scroll.vue?1f6a","webpack://a/./src/components/Scroll.vue?046b"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"scroll\",class:_vm.isDirection},[_c('div',{ref:\"leftView\"},[_c('el-button',{on:{\"click\":_vm.scrollLeftTop}},[_vm._v(_vm._s(_vm.scrollDirection === 'horizontal' ? '左' : '上'))])],1),_c('div',{ref:\"nav\",staticClass:\"navBar\",class:_vm.isDirection,style:({ overflowX: _vm.scrollDirection === 'horizontal' ? 'auto' : 'hidden', overflowY: _vm.scrollDirection === 'vertical' ? 'auto' : 'hidden' }),on:{\"mousedown\":_vm.handleMouseDown,\"mousemove\":_vm.handleMouseMove,\"mouseup\":_vm.handleMouseUp,\"mouseleave\":_vm.handleMouseLeave}},[_vm._t(\"default\")],2),_c('div',{ref:\"rightView\"},[_c('el-button',{on:{\"click\":_vm.scrollRightDown}},[_vm._v(_vm._s(_vm.scrollDirection === 'horizontal' ? '右' : '下'))])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div :class=\"isDirection\" class=\"scroll\">\r\n        <div ref=\"leftView\">\r\n            <el-button @click=\"scrollLeftTop\">{{ scrollDirection === 'horizontal' ? '左' : '上' }}</el-button>\r\n        </div>\r\n        <div class=\"navBar\" :class=\"isDirection\"\r\n            :style=\"{ overflowX: scrollDirection === 'horizontal' ? 'auto' : 'hidden', overflowY: scrollDirection === 'vertical' ? 'auto' : 'hidden' }\"\r\n            ref=\"nav\" @mousedown=\"handleMouseDown\" @mousemove=\"handleMouseMove\" @mouseup=\"handleMouseUp\"\r\n            @mouseleave=\"handleMouseLeave\">\r\n            <slot></slot>\r\n        </div>\r\n        <div ref=\"rightView\">\r\n            <el-button @click=\"scrollRightDown\">{{ scrollDirection === 'horizontal' ? '右' : '下' }}</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        scrollDirection: {\r\n            type: String,\r\n            default: 'horizontal' // 默认为横向滚动\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            flag: false,\r\n            downX: 0,\r\n            downY: 0,\r\n            scrollLeft: 0,\r\n            scrollTop: 0,\r\n            scrollAmount: 100,// 定义每次点击按钮时滚动的像素数\r\n        }\r\n    },\r\n    computed: {\r\n        // 计算是哪个方向添加不同class\r\n        isDirection() {\r\n            return this.$props.scrollDirection == 'horizontal' ? 'row' : 'column'\r\n        },\r\n    },\r\n    watch: {\r\n        // 监听改变滚动条和三个布局的宽高\r\n        scrollDirection(newVal) {\r\n            this.updateScrollbarStyle(newVal);\r\n            this.updateWhFnc()\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.nav = this.$refs.nav;\r\n        // 这里禁用了鼠标滚轮方法，如果想加后期在改动\r\n        this.nav.addEventListener('mousewheel', (event) => event.preventDefault());\r\n        this.updateScrollbarStyle(this.scrollDirection);\r\n        this.updateWhFnc()\r\n    },\r\n\r\n    methods: {\r\n        updateWhFnc() {\r\n            let leftView = this.$refs.leftView;\r\n            let rightView = this.$refs.rightView;\r\n            if (this.scrollDirection === 'horizontal') {\r\n                leftView.style.width = '10%'\r\n                rightView.style.width = '10%'\r\n                this.nav.style.width = '60%'\r\n            } else {\r\n                leftView.style.height = '10%'\r\n                rightView.style.height = '10%'\r\n                this.nav.style.height = '60%'\r\n            }\r\n        },\r\n        // 动态切换滚动条样式\r\n        updateScrollbarStyle(direction) {\r\n            const scrollbarStyle = direction === 'horizontal' ? {\r\n                '--scrollbar-width': '10px',\r\n                '--scrollbar-height': '15px',\r\n                '--scrollbar-thumb-width': '30%',\r\n                '--scrollbar-thumb-height': '100%'\r\n            } : {\r\n                '--scrollbar-width': '15px',\r\n                '--scrollbar-height': '10px',\r\n                '--scrollbar-thumb-width': '100%',\r\n                '--scrollbar-thumb-height': '30%',\r\n                '--scrollbar-thumb-color': 'red'\r\n            };\r\n            for (const [key, value] of Object.entries(scrollbarStyle)) {\r\n                this.nav.style.setProperty(key, value);\r\n            }\r\n        },\r\n        // 鼠标按下\r\n        handleMouseDown(event) {\r\n            event.preventDefault()\r\n            this.flag = true;\r\n            if (this.scrollDirection === 'horizontal') {\r\n                this.downX = event.clientX;\r\n                this.scrollLeft = this.nav.scrollLeft;\r\n            } else {\r\n                this.downY = event.clientY;\r\n                this.scrollTop = this.nav.scrollTop;\r\n            }\r\n        },\r\n        // 鼠标移动\r\n        handleMouseMove(event) {\r\n            if (this.flag) {\r\n                if (this.scrollDirection === 'horizontal') {\r\n                    var moveX = event.clientX;\r\n                    var scrollX = moveX - this.downX;\r\n                    this.nav.scrollLeft = this.scrollLeft - scrollX;\r\n                } else {\r\n                    var moveY = event.clientY;\r\n                    var scrollY = moveY - this.downY;\r\n                    this.nav.scrollTop = this.scrollTop - scrollY;\r\n                }\r\n            }\r\n        },\r\n        // 鼠标抬起\r\n        handleMouseUp() {\r\n            this.flag = false;\r\n        },\r\n        // 鼠标离开\r\n        handleMouseLeave() {\r\n            this.flag = false;\r\n        },\r\n        // 左,上方法\r\n        scrollLeftTop() {\r\n            if (this.scrollDirection === 'horizontal') {\r\n                this.nav.scrollLeft -= this.scrollAmount;\r\n            } else {\r\n                this.nav.scrollTop -= this.scrollAmount;\r\n            }\r\n        },\r\n        // 右下方法\r\n        scrollRightDown() {\r\n            if (this.scrollDirection === 'horizontal') {\r\n                this.nav.scrollLeft += this.scrollAmount;\r\n            } else {\r\n                this.nav.scrollTop += this.scrollAmount;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.navBar {\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    /* margin: 0 25px; */\r\n    white-space: nowrap;\r\n    user-select: none;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.scroll {\r\n    align-items: center;\r\n    display: flex;\r\n    height: 100%;\r\n    justify-content: space-around;\r\n}\r\n\r\n.row {\r\n    flex-direction: row;\r\n\r\n}\r\n\r\n.column {\r\n    flex-direction: column;\r\n}\r\n\r\n/* 去除底部滚动条 */\r\n/* .navBar::-webkit-scrollbar {\r\n    display: none !important;\r\n} */\r\n/* // 设置滚动条的样式 */\r\n/* ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 30px;\r\n    background-color: red;\r\n} */\r\n\r\n/* // 滚动条两端按钮 */\r\n/* ::-webkit-scrollbar-button {\r\n    display: none;\r\n    background: green;\r\n    border: 3px solid blue;\r\n} */\r\n\r\n/* ::-webkit-scrollbar-button:active {\r\n    background: blue;\r\n    border: 3px solid green;\r\n} */\r\n\r\n/* ::-webkit-scrollbar:hover {\r\n    background-color: #eee;\r\n} */\r\n\r\n/* // 滚动槽外层轨道 */\r\n/* ::-webkit-scrollbar-track {\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 10px;\r\n    background: teal;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: rgba(green, .1);\r\n} */\r\n\r\n/* // 内层滚动槽 */\r\n/* ::-webkit-scrollbar-track-piece {\r\n    background-color: rgba(skyblue, .3);\r\n} */\r\n\r\n/* // 滚动条滑块 */\r\n/* ::-webkit-scrollbar-thumb {\r\n    border-radius: 15px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);\r\n    background-color: rgba(yellow, .8);\r\n    background: cyan;\r\n    width: 30%;\r\n} */\r\n\r\n/* // 边角相交处 */\r\n/* ::-webkit-scrollbar-corner {\r\n    background-color: #000;\r\n    border-radius: 50%;\r\n} */\r\n\r\n/* // 定义右下角拖动块样式 */\r\n/* ::-webkit-resizer {} */\r\n\r\n\r\n/* 设置滚动条的样式 */\r\n::-webkit-scrollbar {\r\n    width: var(--scrollbar-width);\r\n    height: var(--scrollbar-height);\r\n    /* background-color: var(--scrollbar-track-color);  */\r\n    background: rebeccapurple;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    /* background-color: var(--scrollbar-thumb-color); */\r\n    background: red;\r\n    width: var(--scrollbar-thumb-width);\r\n    height: var(--scrollbar-thumb-height);\r\n    border-radius: 5px;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Scroll.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Scroll.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Scroll.vue?vue&type=template&id=0576b2d4&scoped=true\"\nimport script from \"./Scroll.vue?vue&type=script&lang=js\"\nexport * from \"./Scroll.vue?vue&type=script&lang=js\"\nimport style0 from \"./Scroll.vue?vue&type=style&index=0&id=0576b2d4&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0576b2d4\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","class","isDirection","ref","on","scrollLeftTop","_v","_s","scrollDirection","style","overflowX","overflowY","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseLeave","_t","scrollRightDown","staticRenderFns","props","type","String","default","data","flag","downX","downY","scrollLeft","scrollTop","scrollAmount","computed","$props","watch","newVal","updateScrollbarStyle","updateWhFnc","mounted","nav","$refs","addEventListener","event","preventDefault","methods","leftView","rightView","width","height","direction","scrollbarStyle","key","value","Object","entries","setProperty","clientX","clientY","moveX","scrollX","moveY","scrollY","component"],"sourceRoot":""}